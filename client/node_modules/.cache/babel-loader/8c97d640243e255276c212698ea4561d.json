{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielagallango/Desktop/UNDER/theUnderground/client/src/components/Profile/Profile.js\";\nimport React, { Component } from 'react';\nimport AuthService from '../../service/auth.service';\nimport Container from 'react-bootstrap/Container';\nimport PostService from '../../service/post.service'; // import { Link } from 'react-router-dom'\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUser = user => {\n      this.setState({\n        user\n      });\n    };\n\n    this.getAllPosts = () => {\n      this.postService.getPosts().then(response => this.setState({\n        posts: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.fetchUser = () => {\n      if (this.state.user === null) {\n        this.authService.isLoggedIn().then(response => {\n          this.setUser(response.data);\n        }, error => {\n          this.setUser(false);\n        }).catch(() => {\n          this.setUser(false);\n        });\n      }\n    };\n\n    this.authService = new AuthService();\n    this.postService = new PostService();\n    this.state = {\n      user: null,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n    this.getAllPosts(); // fetch('http://localhost:3000/api/post')\n    //     .then(res => res.json())\n    //     .then(\n    //         (result) => {\n    //             this.setState({\n    //                 isLoaded: true,\n    //                 posts: result\n    //             });\n    //         },\n    //         // error handler\n    //         (error) => {\n    //             this.setState({\n    //                 isLoaded: true,\n    //                 error\n    //             });\n    //         }\n    //     )\n  }\n\n  render() {\n    if (this.state.user) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n        as: \"section\",\n        className: \"profile-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 30\n        }\n      }, \"HOLA, \", this.state.user.username), this.state.posts.map((elm, idx) => /*#__PURE__*/React.createElement(\"p\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 68\n        }\n      }, elm.title)))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }\n      }, \"Cargando...\");\n    }\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/gabrielagallango/Desktop/UNDER/theUnderground/client/src/components/Profile/Profile.js"],"names":["React","Component","AuthService","Container","PostService","Profile","constructor","props","setUser","user","setState","getAllPosts","postService","getPosts","then","response","posts","data","catch","err","console","log","fetchUser","state","authService","isLoggedIn","error","componentDidMount","render","username","map","elm","idx","key","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,OAXmB,GAWRC,IAAD,IAAU;AAChB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACH,KAbkB;;AAAA,SAenBE,WAfmB,GAeL,MAAM;AAChB,WAAKC,WAAL,CAAiBC,QAAjB,GACKC,IADL,CACUC,QAAQ,IAAI,KAAKL,QAAL,CAAc;AAAEM,QAAAA,KAAK,EAAED,QAAQ,CAACE;AAAlB,OAAd,CADtB,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAIH,KApBkB;;AAAA,SAsBnBG,SAtBmB,GAsBP,MAAM;AACd,UAAI,KAAKC,KAAL,CAAWd,IAAX,KAAoB,IAAxB,EAA8B;AAE1B,aAAKe,WAAL,CAAiBC,UAAjB,GACKX,IADL,CAESC,QAAD,IAAc;AACV,eAAKP,OAAL,CAAaO,QAAQ,CAACE,IAAtB;AACH,SAJT,EAKSS,KAAD,IAAW;AACP,eAAKlB,OAAL,CAAa,KAAb;AACH,SAPT,EASKU,KATL,CASW,MAAM;AACT,eAAKV,OAAL,CAAa,KAAb;AACH,SAXL;AAYH;AACJ,KAtCkB;;AAEf,SAAKgB,WAAL,GAAmB,IAAItB,WAAJ,EAAnB;AACA,SAAKU,WAAL,GAAmB,IAAIR,WAAJ,EAAnB;AACA,SAAKmB,KAAL,GAAa;AACTd,MAAAA,IAAI,EAAE,IADG;AAETO,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAgCDW,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,SAAL;AACA,SAAKX,WAAL,GAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDiB,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKL,KAAL,CAAWd,IAAf,EAAqB;AACjB,0BACI,uDACI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAW,KAAKc,KAAL,CAAWd,IAAX,CAAgBoB,QAA3B,CAAL,EAEQ,KAAKN,KAAL,CAAWP,KAAX,CAAiBc,GAAjB,CAAqB,CAACC,GAAD,EAAMC,GAAN,kBAAc;AAAG,QAAA,GAAG,EAAEC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcF,GAAG,CAACG,KAAlB,CAAnC,CAFR,CADJ,CADJ,CADJ;AAWH,KAZD,MAYO;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;AAEJ;;AAjF2B;;AAoFhC,eAAe7B,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport AuthService from '../../service/auth.service'\nimport Container from 'react-bootstrap/Container'\nimport PostService from '../../service/post.service'\n\n// import { Link } from 'react-router-dom'\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n        this.postService = new PostService()\n        this.state = {\n            user: null,\n            posts: []\n        }\n    }\n\n\n    setUser = (user) => {\n        this.setState({ user })\n    }\n\n    getAllPosts = () => {\n        this.postService.getPosts()\n            .then(response => this.setState({ posts: response.data }))\n            .catch(err => console.log(err))\n\n    }\n\n    fetchUser = () => {\n        if (this.state.user === null) {\n\n            this.authService.isLoggedIn()\n                .then(\n                    (response) => {\n                        this.setUser(response.data)\n                    },\n                    (error) => {\n                        this.setUser(false)\n                    }\n                )\n                .catch(() => {\n                    this.setUser(false)\n                })\n        }\n    }\n\n    componentDidMount() {\n        this.fetchUser()\n        this.getAllPosts()\n        // fetch('http://localhost:3000/api/post')\n        //     .then(res => res.json())\n        //     .then(\n        //         (result) => {\n        //             this.setState({\n        //                 isLoaded: true,\n        //                 posts: result\n        //             });\n        //         },\n        //         // error handler\n        //         (error) => {\n        //             this.setState({\n        //                 isLoaded: true,\n        //                 error\n        //             });\n        //         }\n        //     )\n    }\n\n    render() {\n        if (this.state.user) {\n            return (\n                <>\n                    <Container as=\"section\" className=\"profile-section\">\n                        <div><h1>HOLA, {this.state.user.username}</h1>\n                            {\n                                this.state.posts.map((elm, idx) => <p key={key}>{elm.title}</p>)\n                            }\n                        </div>\n                    </Container>\n                </>\n            )\n        } else {\n            return <p>Cargando...</p>\n        }\n\n    }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}